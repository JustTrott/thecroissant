// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bakery {
  id            String   @id @default(cuid())
  name          String
  address       String
  hours         String?
  contact       String?
  criticRating  Float    @default(0) // 1-5 stars from critic
  memberRating  Float    @default(0) // 1-5 stars from members
  priceRating   Int      @default(1) // 1-3 price level
  totalRating   Float    @default(0) // 1-5 stars overall
  review        String   @db.Text
  photos        String[] // Array of photo URLs
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  deletedAt     DateTime? // Null means not deleted
  authorId      String?   // Optional to maintain backward compatibility
  author        Author?   @relation(fields: [authorId], references: [id])
}

model Author {
  id        String    @id @default(cuid())
  firstName String
  lastName  String
  image     String?   // URL to author's image
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? // Null means not deleted
  bakeries  Bakery[]
}

model Admin {
  id           String   @id @default(cuid())
  username     String   @unique
  passwordHash String   // Never store plain text passwords
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deletedAt    DateTime? // Null means not deleted
}
